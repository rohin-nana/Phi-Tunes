{"ast":null,"code":"var _jsxFileName = \"/Users/genji/Documents/Coding Projects/phi-tunes/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport './Home.css';\nimport React, { useEffect, useState } from 'react';\nimport RequestsList from './RequestsList';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [songRequest, setSongRequest] = useState(\"Enter Song\");\n  const [artistRequest, setArtistRequest] = useState(\"Enter Artist\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  const submitRequest = () => {\n    if (songRequest === \"Enter Song\" || artistRequest === \"Enter Artist\") {\n      setSongRequest(\"\");\n      setArtistRequest(\"\");\n      setErrorMessage(\"Cannot leave input blank\");\n    } else if (songRequest === \"\") {\n      setErrorMessage(\"Cannot leave input blank\");\n    } else if (songRequest) {\n      console.log(1);\n    } else {\n      Axios.post(\"http://localhost:3001/songInsert\", {\n        song: songRequest,\n        artist: artistRequest\n      }).then(response => {\n        setErrorMessage(\"\");\n        setSongRequest(\"\");\n        setArtistRequest(\"\");\n        console.log(\"asdfg\");\n        window.location.href = 'http://localhost:3000/submitted';\n      }).catch(error => {\n        console.log(\"Error: \" + error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: \"Phi Tau Music Request Site\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SongRequest\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Request\",\n        value: songRequest,\n        type: \"text\",\n        onChange: e => setSongRequest(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ArtistRequest\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Request\",\n        value: artistRequest,\n        type: \"text\",\n        onChange: e => setArtistRequest(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ErrorMessage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ErrorMessageText\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"RequestButton\",\n      onClick: submitRequest,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RequestButtonText\",\n        children: \"Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QueueHeading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"QueueHeadingText\",\n        children: \"Queue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RequestsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"fvCMHsdk+Bka6I7+tteXuUWcv1s=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/genji/Documents/Coding Projects/phi-tunes/client/src/components/Home.js"],"names":["React","useEffect","useState","RequestsList","Axios","Home","songRequest","setSongRequest","artistRequest","setArtistRequest","errorMessage","setErrorMessage","refreshPage","window","location","reload","submitRequest","console","log","post","song","artist","then","response","href","catch","error","e","target","value"],"mappings":"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","sourcesContent":["import './Home.css';\nimport React, { useEffect, useState } from 'react';\nimport RequestsList from './RequestsList';\nimport Axios from 'axios';\n\nfunction Home() {\n    const [songRequest, setSongRequest] = useState(\"Enter Song\");\n    const [artistRequest, setArtistRequest] = useState(\"Enter Artist\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    const submitRequest = () => {\n        if (songRequest===\"Enter Song\" || artistRequest===\"Enter Artist\") {\n            setSongRequest(\"\");\n            setArtistRequest(\"\");\n            setErrorMessage(\"Cannot leave input blank\");\n        } else if (songRequest===\"\") {\n            setErrorMessage(\"Cannot leave input blank\");\n        } else if (songRequest) {\n            console.log(1);\n        } else {\n            Axios.post(\"http://localhost:3001/songInsert\", {\n            song: songRequest,\n            artist: artistRequest})\n            .then(response => {\n                setErrorMessage(\"\");\n                setSongRequest(\"\");\n                setArtistRequest(\"\");\n                console.log(\"asdfg\");\n                window.location.href='http://localhost:3000/submitted';\n            }).catch(error => {\n                console.log(\"Error: \" + error)\n            });\n        }\n    }\n\n    return (\n        <div className=\"Home\">\n            <div className=\"Header\">\n                Phi Tau Music Request Site\n            </div>\n            <div className=\"SongRequest\">\n                <input className=\"Request\" value={songRequest} type=\"text\" onChange={ e => setSongRequest(e.target.value) }/>\n            </div>\n            <div className=\"ArtistRequest\">\n                <input className=\"Request\" value={artistRequest} type=\"text\" onChange={ e => setArtistRequest(e.target.value) }/>\n            </div>\n            <div className=\"ErrorMessage\">\n                <div className=\"ErrorMessageText\">\n                    {errorMessage}\n                </div>\n            </div>\n            <button className=\"RequestButton\" onClick={submitRequest}>\n                <div className=\"RequestButtonText\">\n                    Request\n                </div>\n            </button>\n            <div className=\"QueueHeading\">\n                <div className=\"QueueHeadingText\">\n                    Queue\n                </div>\n            </div>\n            <div>\n                < RequestsList />\n            </div>\n        </div>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}